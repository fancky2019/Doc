
#user  nobody;
worker_processes 1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
	worker_connections 1024;
}



http {

    #nginx 默认不显示节后耗时
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"'
                      ' $request_time';
    access_log  D:/work/dev/nginx/nginx-1.22.0/logs/access.log  main;
    #access_log  /var/log/nginx/access.log  main;

	#autoindex off;
	include mime.types;
	default_type application/octet-stream;
	#log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
	#                  '$status $body_bytes_sent "$http_referer" '
	#                  '"$http_user_agent" "$http_x_forwarded_for"';

	#access_log  logs/access.log  main;

	sendfile on;
	#tcp_nopush     on;

	keepalive_timeout  0;
	#keepalive_timeout 65;
    # 默认60秒内客户端没有读取任何数据，则关闭连接。
    send_timeout 6000;
	#gzip  on;

	server {
		listen 80;
		server_name localhost;

		#charset koi8-r;

		#access_log  logs/host.access.log  main;

		location / {
			root html;
			index index.html index.htm;
		}

		#error_page  404              /404.html;

		# redirect server error pages to the static page /50x.html
		#
		error_page 500 502 503 504 /50x.html;
		location = /50x.html {
			root html;
		}



		# proxy the PHP scripts to Apache listening on 127.0.0.1:80
		#
		#location ~ \.php$ {
		#    proxy_pass   http://127.0.0.1;
		#}

		# pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
		#
		#location ~ \.php$ {
		#    root           html;
		#    fastcgi_pass   127.0.0.1:9000;
		#    fastcgi_index  index.php;
		#    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
		#    include        fastcgi_params;
		#}

		# deny access to .htaccess files, if Apache's document root
		# concurs with nginx's one
		#
		#location ~ /\.ht {
		#    deny  all;
		#}
	}


	server {
		listen 8030;
		server_name localhost;
		 add_header 'Access-Control-Allow-Origin' '*';	
		location / {
			proxy_pass http://front_cluster;
			proxy_set_header Host $host;
			proxy_set_header X-Real-IP $remote_addr;
            #此处为了实现前段集群：反向代理到了多个前段,各个前段端口不是8030，就形成了跨域。
            #跨域：域名（主机）、端口、协议（http https）任一不同。localhost和127.0.0.1也跨域.
			#前后端分离：前端开发肯定跨域，因为要调用后端的api
			#允许全部域名跨域，可以指定特点域名，逗号分隔
			#add_header 'Access-Control-Allow-Origin' '*' always;
	        add_header 'Access-Control-Allow-Origin' '*';			
			add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS,PUT,DELETE,OPTION';
			#允许携带cookie
			add_header 'Access-Control-Allow-Credentials' 'true';
			#允许传输的请求头
			add_header 'Access-Control-Allow-Headers' 'DNT,X-Mx-ReqToken,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization,Accept,Referer,Accept-Encoding,Accept-Language,Access-Control-Request-Headers,Access-Control-Request-Method,Connection,Host,Origin,Sec-Fetch-Mode';
			#设置跨域请求允许的Header头信息字段，以逗号分隔的字符串
			#add_header Access-Control-Allow-Headers 'Origin,X-Requested-With,Content-Type,Accept,Authorization,token';
			# 预检请求处理
			if ($request_method = OPTIONS) {
				return 204;
			}
		}
		
		#接口
		location ^~ /api/ {
			#^*/api/ 报 We're sorry but wms-prod doesn't work properly without JavaScript enabled. P
			#rewrite ^/api/(.*)$ /$1 break; 
			#代理接口地址;
			#proxy_pass http://localhost:9000;
			proxy_pass http://wms_api;
			#单位 s. 设置大点防止debug 关闭连接 Status Code: 504 Gateway Time-out。配置在代理的地方
			proxy_connect_timeout   1800;
		    proxy_send_timeout      1800;
		    proxy_read_timeout      1800;
		}
		
		#登录中心地址.注意：/api/app/GSUser/Login  login 不是login/,否则301错误
		location ^~ /api/app/GSUser/ {
			#^*/api/ 报 We're sorry but wms-prod doesn't work properly without JavaScript enabled. P
			#rewrite ^/api/(.*)$ /$1 break; 
			#代理接口地址;
			#proxy_pass http://localhost:9000;
			proxy_pass http://gen-song.vip:14001;
		}


	}

	server {
		listen 8031;
		server_name localhost;
		location / {
			#注意：路径"/" 不是D:\work\dev\nginx\nginx-1.22.0\app\wms\dist 而是下面
			root D:/work/dev/nginx/nginx-1.22.0/app/wms/dist;
			index index.html;
			try_files $uri $uri/ /index.html;
			#405页面处理---nginx 部署前端post请求405 not allowed
			error_page 405 =200 @405; 
		}
		#加入下面代码
		location @405 {
			proxy_set_header Host $host;
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			#ip为后端服务地址
			#proxy_pass http://localhost:9000$request_uri ;
			proxy_pass http://wms_api$request_uri;
		}

		#接口
		location ^~ /api/ {
			#^*/api/ 报 We're sorry but wms-prod doesn't work properly without JavaScript enabled. P
			#rewrite ^/api/(.*)$ /$1 break; 
			#代理接口地址;
			#proxy_pass http://localhost:9000;
			proxy_pass http://wms_api;
		}
		
		#登录中心地址.注意：/api/app/GSUser/Login  login 不是login/,否则301错误
		location ^~ /api/app/GSUser/ {
			#^*/api/ 报 We're sorry but wms-prod doesn't work properly without JavaScript enabled. P
			#rewrite ^/api/(.*)$ /$1 break; 
			#代理接口地址;
			#proxy_pass http://localhost:9000;
			proxy_pass http://gen-song.vip:14001;
		}
		

	}

	upstream front_cluster {
		server localhost:8031;
		#server 60.174.197.249:14012 backup; # backup 热备
	}

	upstream wms_api {
		server localhost:9000 weight=1; # 热备
		#server 10.12.3.48:9000 weight=1; 
		#server 10.12.3.48:9000 weight=1 backup; # 热备
	    server gen-song.vip:13998 weight=1 backup; # 热备
	}

	# another virtual host using mix of IP-, name-, and port-based configuration
	#
	#server {
	#    listen       8000;
	#    listen       somename:8080;
	#    server_name  somename  alias  another.alias;

	#    location / {
	#        root   html;
	#        index  index.html index.htm;
	#    }
	#}


	# HTTPS server
	#
	#server {
	#    listen       443 ssl;
	#    server_name  localhost;

	#    ssl_certificate      cert.pem;
	#    ssl_certificate_key  cert.key;

	#    ssl_session_cache    shared:SSL:1m;
	#    ssl_session_timeout  5m;

	#    ssl_ciphers  HIGH:!aNULL:!MD5;
	#    ssl_prefer_server_ciphers  on;

	#    location / {
	#        root   html;
	#        index  index.html index.htm;
	#    }
	#}


	#xxljob  admin 后台集群
	#注：在host 添加 127.0.0.1    xxljob.com
	upstream backserver {
		server 127.0.0.1:8182 weight=1;
		server 127.0.0.1:8183 weight=1;
	}

	server {
		listen 8181;
		server_name xxljob.com;

		location / {
			proxy_pass http://backserver;
			index index.html index.htm;
		}



	}

}